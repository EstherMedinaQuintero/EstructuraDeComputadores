$date
	Thu Nov 24 15:40:46 2022
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module cuenta1_tb $end
$var wire 1 ! fin_test $end
$var wire 4 " Cuenta_test [3:0] $end
$var reg 3 # Valor_test [2:0] $end
$var reg 1 $ clk_test $end
$var reg 1 % start_test $end
$scope module cuenta1 $end
$var wire 4 & Cuenta [3:0] $end
$var wire 3 ' Valor [2:0] $end
$var wire 1 $ clk $end
$var wire 1 % start $end
$var wire 1 ! fin $end
$var wire 3 ( SalQ [2:0] $end
$var wire 4 ) SalA [3:0] $end
$var wire 1 * ResetA $end
$var wire 4 + EntA [3:0] $end
$var wire 1 , DesplazaQ $end
$var wire 1 - CargaQ $end
$var wire 1 . CargaA $end
$scope module A $end
$var wire 1 $ clk $end
$var wire 4 / q [3:0] $end
$var wire 4 0 entA [3:0] $end
$var wire 1 * ResetA $end
$var wire 1 . CargaA $end
$scope module ffa0 $end
$var wire 1 $ clk $end
$var wire 1 1 d $end
$var wire 1 * reset $end
$var wire 1 . carga $end
$var reg 1 2 q $end
$upscope $end
$scope module ffa1 $end
$var wire 1 $ clk $end
$var wire 1 3 d $end
$var wire 1 * reset $end
$var wire 1 . carga $end
$var reg 1 4 q $end
$upscope $end
$scope module ffa2 $end
$var wire 1 $ clk $end
$var wire 1 5 d $end
$var wire 1 * reset $end
$var wire 1 . carga $end
$var reg 1 6 q $end
$upscope $end
$scope module ffa3 $end
$var wire 1 $ clk $end
$var wire 1 7 d $end
$var wire 1 * reset $end
$var wire 1 . carga $end
$var reg 1 8 q $end
$upscope $end
$upscope $end
$scope module Q $end
$var wire 1 $ clk $end
$var wire 1 9 enable $end
$var wire 3 : entQ [2:0] $end
$var wire 1 ; reset $end
$var wire 3 < q [2:0] $end
$var wire 1 , DesplazaQ $end
$var wire 1 - CargaQ $end
$scope module ff0 $end
$var wire 1 9 carga $end
$var wire 1 $ clk $end
$var wire 1 = inp_c $end
$var wire 1 > inp_d $end
$var wire 1 ; reset $end
$var wire 1 - selc_d $end
$var wire 1 ? q $end
$var wire 1 @ inp $end
$scope module ff0 $end
$var wire 1 9 carga $end
$var wire 1 $ clk $end
$var wire 1 ; reset $end
$var wire 1 @ d $end
$var reg 1 ? q $end
$upscope $end
$scope module mux0 $end
$var wire 1 > a $end
$var wire 1 = b $end
$var wire 1 @ out $end
$var wire 1 A s_n $end
$var wire 1 B sa $end
$var wire 1 C sb $end
$var wire 1 - s $end
$upscope $end
$upscope $end
$scope module ff1 $end
$var wire 1 9 carga $end
$var wire 1 $ clk $end
$var wire 1 D inp_c $end
$var wire 1 E inp_d $end
$var wire 1 ; reset $end
$var wire 1 - selc_d $end
$var wire 1 F q $end
$var wire 1 G inp $end
$scope module ff0 $end
$var wire 1 9 carga $end
$var wire 1 $ clk $end
$var wire 1 ; reset $end
$var wire 1 G d $end
$var reg 1 F q $end
$upscope $end
$scope module mux0 $end
$var wire 1 E a $end
$var wire 1 D b $end
$var wire 1 G out $end
$var wire 1 H s_n $end
$var wire 1 I sa $end
$var wire 1 J sb $end
$var wire 1 - s $end
$upscope $end
$upscope $end
$scope module ff2 $end
$var wire 1 9 carga $end
$var wire 1 $ clk $end
$var wire 1 K inp_c $end
$var wire 1 L inp_d $end
$var wire 1 ; reset $end
$var wire 1 - selc_d $end
$var wire 1 M q $end
$var wire 1 N inp $end
$scope module ff0 $end
$var wire 1 9 carga $end
$var wire 1 $ clk $end
$var wire 1 ; reset $end
$var wire 1 N d $end
$var reg 1 M q $end
$upscope $end
$scope module mux0 $end
$var wire 1 L a $end
$var wire 1 K b $end
$var wire 1 N out $end
$var wire 1 O s_n $end
$var wire 1 P sa $end
$var wire 1 Q sb $end
$var wire 1 - s $end
$upscope $end
$upscope $end
$upscope $end
$scope module sum $end
$var wire 4 R A [3:0] $end
$var wire 4 S B [3:0] $end
$var wire 1 T c_in $end
$var wire 1 U p3 $end
$var wire 1 V p2 $end
$var wire 1 W p1 $end
$var wire 1 X p0 $end
$var wire 1 Y g3 $end
$var wire 1 Z g2 $end
$var wire 1 [ g1 $end
$var wire 1 \ g0 $end
$var wire 1 ] c_out $end
$var wire 1 ^ c4 $end
$var wire 1 _ c3 $end
$var wire 1 ` c2 $end
$var wire 1 a c1 $end
$var wire 4 b S [3:0] $end
$var wire 4 c C [4:1] $end
$scope module cla $end
$var wire 4 d G [3:0] $end
$var wire 4 e P [3:0] $end
$var wire 1 T c_in $end
$var wire 4 f C [4:1] $end
$upscope $end
$scope module fa0 $end
$var wire 1 g a $end
$var wire 1 h b $end
$var wire 1 T c_in $end
$var wire 1 a c_out $end
$var wire 1 \ g $end
$var wire 1 X p $end
$var wire 1 i sum_par $end
$var wire 1 j sum $end
$var wire 1 k carry2 $end
$var wire 1 l carry1 $end
$scope module ha1 $end
$var wire 1 g a $end
$var wire 1 h b $end
$var wire 1 l carry $end
$var wire 1 i sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 T a $end
$var wire 1 i b $end
$var wire 1 k carry $end
$var wire 1 j sum $end
$upscope $end
$upscope $end
$scope module fa1 $end
$var wire 1 m a $end
$var wire 1 n b $end
$var wire 1 o c_in $end
$var wire 1 ` c_out $end
$var wire 1 [ g $end
$var wire 1 W p $end
$var wire 1 p sum_par $end
$var wire 1 q sum $end
$var wire 1 r carry2 $end
$var wire 1 s carry1 $end
$scope module ha1 $end
$var wire 1 m a $end
$var wire 1 n b $end
$var wire 1 s carry $end
$var wire 1 p sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 o a $end
$var wire 1 p b $end
$var wire 1 r carry $end
$var wire 1 q sum $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var wire 1 t a $end
$var wire 1 u b $end
$var wire 1 v c_in $end
$var wire 1 _ c_out $end
$var wire 1 Z g $end
$var wire 1 V p $end
$var wire 1 w sum_par $end
$var wire 1 x sum $end
$var wire 1 y carry2 $end
$var wire 1 z carry1 $end
$scope module ha1 $end
$var wire 1 t a $end
$var wire 1 u b $end
$var wire 1 z carry $end
$var wire 1 w sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 v a $end
$var wire 1 w b $end
$var wire 1 y carry $end
$var wire 1 x sum $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var wire 1 { a $end
$var wire 1 | b $end
$var wire 1 } c_in $end
$var wire 1 ^ c_out $end
$var wire 1 Y g $end
$var wire 1 U p $end
$var wire 1 ~ sum_par $end
$var wire 1 !" sum $end
$var wire 1 "" carry2 $end
$var wire 1 #" carry1 $end
$scope module ha1 $end
$var wire 1 { a $end
$var wire 1 | b $end
$var wire 1 #" carry $end
$var wire 1 ~ sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 } a $end
$var wire 1 ~ b $end
$var wire 1 "" carry $end
$var wire 1 !" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module uc0 $end
$var wire 1 $ clk $end
$var wire 1 $" q0 $end
$var wire 1 % start $end
$var wire 1 * ResetA $end
$var wire 1 ! Fin $end
$var wire 1 , DesplazaQ $end
$var wire 1 - CargaQ $end
$var wire 1 . CargaA $end
$var reg 3 %" nextstate [2:0] $end
$var reg 3 &" state [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx &"
bx %"
x$"
x#"
x""
x!"
x~
x}
0|
x{
xz
xy
xx
xw
xv
0u
xt
xs
xr
xq
xp
xo
0n
xm
xl
xk
xj
xi
1h
xg
bx f
bx1 e
b0x d
bx c
bx b
xa
x`
x_
x^
x]
x\
0[
0Z
0Y
1X
xW
xV
xU
0T
b1 S
bx R
xQ
0P
xO
xN
xM
0L
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
bx <
0;
bx :
x9
x8
x7
x6
x5
x4
x3
x2
x1
bx 0
bx /
x.
x-
x,
bx +
x*
bx )
bx (
bx '
bx &
1%
1$
bx #
bx "
x!
$end
#100
0v
0}
0]
0o
b0 c
b0 f
0U
0V
b1 e
0W
b0 d
0\
0{
0t
0m
0g
08
06
04
b0 "
b0 &
b0 )
b0 /
b0 R
02
b1 %"
0.
0I
0B
0O
0H
0A
19
0,
1-
1*
0!
b0 &"
0#"
0z
0s
0k
#200
0_
0^
0`
0a
0y
0""
0r
0~
0w
0p
1i
0l
#300
07
05
03
11
0!"
0x
0q
b1 +
b1 0
b1 b
1j
#4000
0%
#5000
1@
1G
1N
1C
1J
1Q
1=
1D
1K
b111 #
b111 '
b111 :
0$
#10000
1E
1>
1$"
1M
1F
b111 (
b111 <
1?
1$
#10100
b10 %"
1.
0N
1I
1B
0Q
1O
0J
1H
0C
1A
09
0-
0*
b1 &"
#15000
0$
#20000
1o
b1 c
b1 f
b1 d
1\
1g
b1 "
b1 &
b1 )
b1 /
b1 R
12
1$
#20100
b11 %"
0.
19
1,
b10 &"
13
1a
b11 +
b11 0
b11 b
1q
0i
1l
#20200
01
b10 +
b10 0
b10 b
0j
#25000
0$
#30000
0G
0I
0E
b11 (
b11 <
0M
1$
#30100
b100 %"
1.
09
0,
b11 &"
#35000
0$
#40000
0o
b0 c
b0 f
b11 e
1W
b0 d
0\
1m
0g
14
b10 "
b10 &
b10 )
b10 /
b10 R
02
1$
#40100
b101 %"
0.
19
1,
b100 &"
03
0a
b0 +
b0 0
b0 b
0q
1p
1i
0l
#40200
13
11
1q
b11 +
b11 0
b11 b
1j
#45000
0$
#50000
0@
0B
0>
b1 (
b1 <
0F
1$
#50100
b110 %"
09
1.
0,
b101 &"
#55000
0$
#60000
1v
1o
b11 c
b11 f
b1 d
1\
1g
b11 "
b11 &
b11 )
b11 /
b11 R
12
1$
#60100
0.
1!
b110 &"
15
03
1`
1a
1x
b101 +
b101 0
b101 b
0q
1r
0i
1l
#60200
01
b100 +
b100 0
b100 b
0j
#65000
0$
#70000
1$
#75000
0$
#80000
1$
#85000
0$
